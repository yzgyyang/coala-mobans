{% if not packages and package_module %}
{% set packages = [package_module] %}
{% endif %}
[bdist_wheel]
python-tag = py34.py35.py36
{% block extras %}
{% endblock %}

[tool:pytest]
minversion = {{ pytest_version }}

testpaths =
{% for package in packages %}
  {{ package }}
{% endfor %}
  tests

python_files = *Test.py
python_classes = *Test

addopts =
  -r a
  -p no:logging
  --color=yes
  --doctest-glob=*.rst
  --doctest-modules
  --doctest-ignore-import-error
{% if test_prevent_skips %}
  --error-for-skips
{% endif %}
  --cov
  --instafail
  --profile
  --reorder 'requirements.txt' 'test-requirements.txt' '*'
{# plugin reqs is enabled in conftest.py #}
{% block extra_pytest_addopts %}
{% endblock %}

doctest_optionflags =
  ELLIPSIS
  IGNORE_EXCEPTION_DETAIL

reqsfilenamepatterns =
  requirements.txt
  test-requirements.txt

reqsignorevcs = True

timeout = {{ test_timeout }}

[coverage:coverage_env_plugin]
markers = True

[coverage:run]
branch = True
cover_pylib = False

plugins =
  coverage_env_plugin
  coverage_config_reload_plugin

{% if name == 'mobans' %}
source =
  assets/python
{% elif package_module %}
source =
{% for package in packages %}
  {{ package }}
{% endfor %}
{% endif %}

omit = tests/*

[coverage:report]
fail_under = 100
show_missing = True
skip_covered = False
sort = Miss
exclude_lines =
{% if allow_generic_no_cover %}
  pragma: no ?cover
{% endif %}
  pragma ${PLATFORM_SYSTEM}: no cover
  pragma ${OS_NAME}: no cover
  pragma Python [0-9.,]*${PYTHON_VERSION}[0-9.,]*: no cover
{% block coverage_pragma %}
{% endblock %}
